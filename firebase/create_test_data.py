"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ Firestore
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–µ–±-API Firebase –≤–º–µ—Å—Ç–æ Admin SDK
"""

import json
import requests
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Firebase –∏–∑ .env —Ñ–∞–π–ª–∞
FIREBASE_PROJECT_ID = "autologist-65cd7"
FIREBASE_API_KEY = "AIzaSyA8q_Dl-rKdm-MUr4226czsIRjioBGEChY"

def create_test_data():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ REST API"""
    
    print("üî• –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ Firestore...")
    print(f"üìä –ü—Ä–æ–µ–∫—Ç: {FIREBASE_PROJECT_ID}")
    print("-" * 50)
    
    # –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è Firestore REST API
    base_url = f"https://firestore.googleapis.com/v1/projects/{FIREBASE_PROJECT_ID}/databases/(default)/documents"
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å—ã—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    test_messages = [
        {
            "text": {"stringValue": "–í–µ–∑—É –º–µ–±–µ–ª—å –ú–æ—Å–∫–≤–∞-–ü–∏—Ç–µ—Ä, 5 —Ç–æ–Ω–Ω, 40000 —Ä—É–±, —Ç–µ–ª 89991234567"},
            "timestamp": {"timestampValue": datetime.now().isoformat() + "Z"},
            "chat_id": {"integerValue": "-1001234567890"},
            "chat_title": {"stringValue": "–ì—Ä—É–∑—ã –ú–æ—Å–∫–≤–∞-–°–ü–±"},
            "sender_id": {"integerValue": "123456789"},
            "message_id": {"integerValue": "1001"},
            "hash": {"stringValue": "sample_hash_1"},
            "processed": {"booleanValue": False},
            "has_media": {"booleanValue": False}
        },
        {
            "text": {"stringValue": "–ù—É–∂–µ–Ω —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç: –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ ‚Üí –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥, –ø—Ä–æ–¥—É–∫—Ç—ã, 3—Ç, —Å—Ä–æ—á–Ω–æ!"},
            "timestamp": {"timestampValue": datetime.now().isoformat() + "Z"},
            "chat_id": {"integerValue": "-1001234567891"},
            "chat_title": {"stringValue": "–°–∏–±–∏—Ä—Å–∫–∏–µ –≥—Ä—É–∑—ã"},
            "sender_id": {"integerValue": "987654321"},
            "message_id": {"integerValue": "1002"},
            "hash": {"stringValue": "sample_hash_2"},
            "processed": {"booleanValue": True},
            "has_media": {"booleanValue": False}
        },
        {
            "text": {"stringValue": "–°—Ç—Ä–æ–π–º–∞—Ç–µ—Ä–∏–∞–ª—ã –ö–∞–∑–∞–Ω—å-–°–∞–º–∞—Ä–∞, 8 —Ç–æ–Ω–Ω, —Ç–µ–Ω—Ç, 60–∫"},
            "timestamp": {"timestampValue": datetime.now().isoformat() + "Z"},
            "chat_id": {"integerValue": "-1001234567892"},
            "chat_title": {"stringValue": "–ü–æ–≤–æ–ª–∂—å–µ –ª–æ–≥–∏—Å—Ç–∏–∫–∞"},
            "sender_id": {"integerValue": "555666777"},
            "message_id": {"integerValue": "1003"},
            "hash": {"stringValue": "sample_hash_3"},
            "processed": {"booleanValue": True},
            "has_media": {"booleanValue": False}
        }
    ]
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –≥—Ä—É–∑—ã
    test_cargos = [
        {
            "from_city": {"stringValue": "–ú–æ—Å–∫–≤–∞"},
            "to_city": {"stringValue": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥"},
            "cargo_type": {"stringValue": "–º–µ–±–µ–ª—å"},
            "weight": {"stringValue": "5 —Ç–æ–Ω–Ω"},
            "volume": {"stringValue": "–Ω–µ —É–∫–∞–∑–∞–Ω"},
            "price": {"stringValue": "40000 —Ä—É–±"},
            "contact": {"stringValue": "89991234567"},
            "urgency": {"stringValue": "–æ–±—ã—á–Ω–∞—è"},
            "timestamp": {"timestampValue": datetime.now().isoformat() + "Z"},
            "original_message_id": {"stringValue": "sample_hash_1"},
            "status": {"stringValue": "–Ω–æ–≤—ã–π"}
        },
        {
            "from_city": {"stringValue": "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫"},
            "to_city": {"stringValue": "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥"},
            "cargo_type": {"stringValue": "–ø—Ä–æ–¥—É–∫—Ç—ã"},
            "weight": {"stringValue": "3 —Ç–æ–Ω–Ω—ã"},
            "volume": {"stringValue": "–Ω–µ —É–∫–∞–∑–∞–Ω"},
            "price": {"stringValue": "–¥–æ–≥–æ–≤–æ—Ä–Ω–∞—è"},
            "contact": {"stringValue": "–Ω–µ —É–∫–∞–∑–∞–Ω"},
            "urgency": {"stringValue": "–≤—ã—Å–æ–∫–∞—è"},
            "timestamp": {"timestampValue": datetime.now().isoformat() + "Z"},
            "original_message_id": {"stringValue": "sample_hash_2"},
            "status": {"stringValue": "–≤ —Ä–∞–±–æ—Ç–µ"}
        },
        {
            "from_city": {"stringValue": "–ö–∞–∑–∞–Ω—å"},
            "to_city": {"stringValue": "–°–∞–º–∞—Ä–∞"},
            "cargo_type": {"stringValue": "—Å—Ç—Ä–æ–π–º–∞—Ç–µ—Ä–∏–∞–ª—ã"},
            "weight": {"stringValue": "8 —Ç–æ–Ω–Ω"},
            "volume": {"stringValue": "—Ç–µ–Ω—Ç"},
            "price": {"stringValue": "60000 —Ä—É–±"},
            "contact": {"stringValue": "–Ω–µ —É–∫–∞–∑–∞–Ω"},
            "urgency": {"stringValue": "–æ–±—ã—á–Ω–∞—è"},
            "timestamp": {"timestampValue": datetime.now().isoformat() + "Z"},
            "original_message_id": {"stringValue": "sample_hash_3"},
            "status": {"stringValue": "–Ω–æ–≤—ã–π"}
        }
    ]
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—ã—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        print("üìù –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è...")
        for i, message in enumerate(test_messages):
            url = f"{base_url}/raw_messages?key={FIREBASE_API_KEY}"
            
            response = requests.post(url, json={"fields": message})
            
            if response.status_code == 200:
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ {i+1}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è {i+1}: {response.text}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –≥—Ä—É–∑—ã
        print("\nüì¶ –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –≥—Ä—É–∑—ã...")
        for i, cargo in enumerate(test_cargos):
            url = f"{base_url}/processed_cargos?key={FIREBASE_API_KEY}"
            
            response = requests.post(url, json={"fields": cargo})
            
            if response.status_code == 200:
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –≥—Ä—É–∑ {i+1}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥—Ä—É–∑–∞ {i+1}: {response.text}")
        
        print("\nüéâ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
        print("üåê –û–±–Ω–æ–≤–∏—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (http://localhost:8000) —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –¥–∞–Ω–Ω—ã–µ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print("\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:")
        print("1. –ü—Ä–æ–µ–∫—Ç Firebase –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        print("2. Firestore Database —Å–æ–∑–¥–∞–Ω")
        print("3. –ü—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ä–∞–∑—Ä–µ—à–∞—é—Ç –∑–∞–ø–∏—Å—å")

if __name__ == "__main__":
    create_test_data()